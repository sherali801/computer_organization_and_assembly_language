.MODEL SMALL
.STACK 100H
.DATA
  PROMPT1 DB 10, 13, "Enter a string: $"
  PROMPT2 DB 10, 13, "Resultant string: $"
  STR1 DB 100 DUP('$')
  STR2 DB 100 DUP('$')
.CODE
MAIN PROC
  MOV AX, @DATA
  MOV DS, AX ;DATA SEGMENT INITIALIZATION
  MOV ES, AX ;EXTRA SEGMENT INITIALIZATION SO STRING INTRUCTIONS CAN USE ES:DI

  LEA DX, PROMPT1
  MOV AH, 09H
  INT 21H ;DISPLAY PROMPT1

  CLD ;CLEAR DIRECTION FLAG SO ES:DI CAN MOVE FORWARDS
  LEA DI, STR1 ;ES:DI => DI IS POINTING TO STARTING ADDRESS OF STR1
  MOV CX, 99 ;MAX INPUT SIZE 

  INPUT:
    MOV AH, 01H
    INT 21H ;SINGLE CHARACTER INPUT
    CMP AL, 13D
    JE END_INPUT ;JUMP IF RETURN IS ENTERED
    STOSB ;MOV CONTENT OF AL TO ES:DI => WHERE DI IS POINTING AND INCREMENTING DI
    LOOP INPUT ;CHECK WHETHER CX IS ZERO TO STOP INPUT 

  END_INPUT:
    LEA SI, STR1 ;DS:SI IS POINTING TO STARTING ADDRESS OF STR1
    LEA DI, STR2 ;ES:DI IS POINTING TO STARTING ADDRESS OF STR2
    LODSB ;MOV CONTENT OF BYTE POINTED BY DS:SI TO AL AND INCREMENTING SI
    AND AL, 0DFH ;CONVERT FIRST CHARACTER OF STR1 TO UPPERCASE
    STOSB ;MOV CONTENT OF AL TO ES:DI => WHERE DI IS POINTING AND INCREMENTING DI

  CAP_CASE:
    LODSB ;MOV CONTENT OF BYTE POINTED BY DS:SI TO AL AND INCREMENTING SI
    CMP AL, '$' 
    JE END_CAP_CASE ;JUMP IF $-TERMINATOR FOUND
    CMP AL, ' ' 
    JNE STORE ;JUMP IF CONTENT OF AL IT OTHER THAN SPACE
    STOSB ;MOV CONTENT OF AL TO ES:DI => WHERE DI IS POINTING AND INCREMENTING DI (STORING SPACE AS IT IS)
    LODSB ;MOV CONTENT OF BYTE POINTED BY DS:SI TO AL AND INCREMENTING SI (NEXT CHARACTER AFTER SPACE WHICH IS TO CONVERT TO UPPERCASE)
    AND AL, 0DFH ;CONVERT CHARACTER OF STR1 TO UPPERCASE
    STORE:
      STOSB ;MOV CONTENT OF AL TO ES:DI => WHERE DI IS POINTING AND INCREMENTING DI
    JMP CAP_CASE ;JUMPING UNCONDIONAL BECAUSE $-TERMINATOR IN LOOP WILL END LOOP 

  END_CAP_CASE:
    LEA DX, PROMPT2
    MOV AH, 09H
    INT 21H ;DISPLAY PROMPT2

  LEA SI, STR2 ;DS:SI IS POINTING TO STARTING ADDRESS OF STR2 WHICH IS REVERSE OF STR1
  OUTPUT:
    LODSB ;MOV CONTENT OF BYTE POINTED BY DS:SI TO AL AND INCREMENTING SI
    CMP AL, '$'
    JE REMAIN
    MOV DL, AL ;DL IS USED TO OUTPUT SINGLE CHARACTER 
    MOV AH, 02H 
    INT 21H ;DISPLAY SINGLE CHARACTER
    LOOP OUTPUT ;ITERATE UNTIL CX IS ZERO TO STOP DISPLAYING CHARACTERS
  
  REMAIN:
  ;EXIT DOS
  MOV AH, 4CH
  INT 21H
MAIN ENDP
END MAIN